#include <stdio.h>
#include <string.h>

// Function to encrypt a message using the Rail Fence Transposition technique
void railFenceEncrypt(char *plaintext, int rails) {
    int len = strlen(plaintext);
    char fence[rails][len];

    // Initialize the fence with spaces
    for (int i = 0; i < rails; i++) {
        for (int j = 0; j < len; j++) {
            fence[i][j] = ' ';
        }
    }

    int row = 0;
    int direction = 1; // Direction 1 for downward, -1 for upward

    // Fill the fence with characters from the plaintext
    for (int i = 0; i < len; i++) {
        fence[row][i] = plaintext[i];
        if (row == 0) {
            direction = 1; // Change direction when at the top rail
        } else if (row == rails - 1) {
            direction = -1; // Change direction when at the bottom rail
        }
        row += direction;
    }

    // Copy the characters from the fence to the plaintext
    int index = 0;
    for (int i = 0; i < rails; i++) {
        for (int j = 0; j < len; j++) {
            if (fence[i][j] != ' ') {
                plaintext[index++] = fence[i][j];
            }
        }
    }
    plaintext[len] = '\0';
}

int main() {
    char plaintext[] = "HELLO"; // Replace with your message
    int rails = 3;              // Replace with the number of rails

    printf("Original Text: %s\n", plaintext);
    railFenceEncrypt(plaintext, rails);
    printf("Encrypted Text: %s\n", plaintext);

    return 0;
}
