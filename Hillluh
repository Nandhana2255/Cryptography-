#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MOD 26

// Function to encrypt a message using the Hill Cipher
void encryptHillCipher(int keyMatrix[2][2], char plaintext[], char ciphertext[]) {
    int len = strlen(plaintext);
    int result[len];

    for (int i = 0; i < len; i += 2) {
        // Create a vector for the current block of two characters
        int vector[2] = {plaintext[i] - 'A', plaintext[i + 1] - 'A'};

        // Multiply the key matrix by the vector
        for (int j = 0; j < 2; j++) {
            result[i + j] = 0;
            for (int k = 0; k < 2; k++) {
                result[i + j] += keyMatrix[j][k] * vector[k];
            }
            result[i + j] %= MOD; // Apply modular arithmetic
        }
    }

    // Convert the result back to characters
    for (int i = 0; i < len; i++) {
        ciphertext[i] = result[i] + 'A';
    }
    ciphertext[len] = '\0';
}

int main() {
    int keyMatrix[2][2] = {{3, 2}, {5, 7}}; // Replace with your key matrix
    char plaintext[] = "HELLO"; // Replace with your message
    char ciphertext[strlen(plaintext)];

    if (strlen(plaintext) % 2 != 0) {
        printf("The message length must be even for the 2x2 Hill Cipher.\n");
        return 1;
    }

    encryptHillCipher(keyMatrix, plaintext, ciphertext);

    printf("Original Text: %s\n", plaintext);
    printf("Encrypted Text: %s\n", ciphertext);

    return 0;
}
